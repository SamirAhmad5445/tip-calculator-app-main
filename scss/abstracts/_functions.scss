@use 'sass:math';
@use 'sass:meta';
@use 'sass:string';
@use 'sizes' as *;
@use 'colors' as *;
@use 'breakpoints' as *;

// convert the value from px to em or rem 
@function convert($value, $unit: em) {
  @if meta.type-of($value) == number {
    @return if(
      math.is-unitless($value),
      calc($value / 16) + $unit,
      string.slice(#{calc($value / 16)}, 1, -3) + $unit
    );
  } @else {
    @error "this function works with numbers by px unit";
  }
}

// get the nth member in the $sizes list 
@function size($n) {
  @return var(--size-#{$n});
}

// get the nth member in the $sizes map color primary
@function primary($n) {
  @return var(--clr-primary-#{$n});
}

// get the nth member in the $colors map color neutral
@function neutral($n) {
  @return var(--clr-neutral-#{$n});
}

// get the nth member in the $colors map color accent
@function accent($n) {
  @return var(--clr-accent-#{$n});
}

// get a point from the breakpoints map 
@function get-point($key) {
  @return convert(map-get($breakpoints, $key));
}